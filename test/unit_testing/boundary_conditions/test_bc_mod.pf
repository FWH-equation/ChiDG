module test_bc_mod
    use pfunit_mod
    use mod_kinds,                  only: rk,ik
    use type_chidg,                 only: chidg_t
    use type_element_connectivity,  only: element_connectivity_t
    implicit none

    public  :: test_bc


    !>
    !!
    !!  @author Nathan A. Wukie
    !!
    !!
    !--------------------------------------------------------------------------
    @TestCase
    type, extends(TestCase) ::  test_bc

        type(chidg_t)   :: chidg

    contains

        procedure   ::  setUp
        procedure   ::  tearDown

    end type test_bc
    !***************************************************************************


contains

    !> NOTE: make sure to use 'this' instead of 'self' since these are over-writting a 
    !! derived type procedure. The argument names have to match
    !!
    !!  @author Nathan A. Wukie
    !!
    !!
    !-----------------------------------------------------------------------------------------
    subroutine setUp(this)
        class(test_bc),    intent(inout)   :: this
        
        !
        ! Start up ChiDG
        ! 
        call this%chidg%start_up('core')


!        !
!        ! Initialize mesh and scalar equation set
!        !
!        call create_mesh_file('D2 NxNxN M1','testfile.h5',nodes,connectivity)
!        idom     = 1
!        ielem    = 1
!        iface    = 1
!
!
!        spacedim = 3
!        mapping  = 1
!        nterms_c = 8
!        call chidg%data%add_domain('D_01',nodes,connectivity,spacedim,nterms_c,'Scalar Advection','Cartesian')
!
!
!        !
!        ! Need boundary conditions or else faces are ORPHAN and won't store integral
!        !
!        call bc_connectivity%init(1)
!        call bc_connectivity%data(1)%init(mapping)
!        call create_bc('Scalar Extrapolate',bc)
!
!        bc_groups(1)%name = "Test Integrate"
!        bc_groups(1)%family = 'Inlet'
!        call bc_groups(1)%bc_states%push_back(bc)
!
!        !
!        ! Create a bc_group to chidg_data
!        !
!        call chidg%data%add_bc_group(bc_groups(1))
!
!
!        !
!        ! Add bc_patches
!        !
!        call bc_connectivity%data(1)%set_face_nodes([1, 3, 5, 7])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!        call bc_connectivity%data(1)%set_face_nodes([2, 4, 6, 8])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!        call bc_connectivity%data(1)%set_face_nodes([1, 2, 5, 6])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!        call bc_connectivity%data(1)%set_face_nodes([3, 4, 7, 8])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!        call bc_connectivity%data(1)%set_face_nodes([1, 2, 3, 4])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!        call bc_connectivity%data(1)%set_face_nodes([5, 6, 7, 8])
!        call chidg%data%add_bc_patch('D_01',"Test Integrate",bc_connectivity)
!
!
!
!        !
!        ! Initialize solver data
!        !
!        call chidg%set('Solution Order', integer_input=1)
!        call chidg%init('domains')
!        call chidg%init('bc')
!        call chidg%init('communication')
!        call chidg%init('chimera')
!        call chidg%init('solvers')


    end subroutine setUp
    !************************************************************************************
    

    !>
    !!
    !!
    !-------------------------------------------------------------------------------------
    subroutine tearDown(this)
        class(test_bc),    intent(inout)   :: this


        !
        ! Close ChiDG interface
        !
        call this%chidg%shut_down('core')

    end subroutine tearDown
    !**************************************************************************************









    !> Test calling bc%init_bc_group one time.
    !!
    !!  @author Nathan A. Wukie
    !!  @date   2/28/2017
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_bc__init_bc_group__one(self)
        class(test_bc), intent(inout)   :: self



!        call bc%init_bc_group(bc_group)


    end subroutine test_bc__init_bc_group__one
    !**************************************************************************************












    !> Test calling bc%init_bc_patch one time.
    !!
    !!  @author Nathan A. Wukie
    !!  @date   2/28/2017
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_bc__init_bc_patch__one(self)
        class(test_bc), intent(inout)   :: self


!        call bc%init_bc_group(bc_group)
!
!        call bc%init_bc_patch(mesh,bc_connectivity)


    end subroutine test_bc__init_bc_patch__one
    !***************************************************************************************





end module test_bc_mod
