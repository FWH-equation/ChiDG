!
!
!   Overlapping cubes. Each cube is 2x2x2 elements. Only one element of overlap
!
!    |--------|-|---------|
!    |        | |         |
!    |        | |         |
!    |        | |         |
!    |--------|-|---------|
!
!
!
@Test
subroutine test__compute_chimera_interpolators()
    use pfunit_mod
    use mod_kinds,      only: rk, ik
    use mod_constants,  only: XI_MIN, XI_MAX, ETA_MIN, ETA_MAX, ZETA_MIN, ZETA_MAX, &
                              INTERIOR, BOUNDARY, CHIMERA, IO_DESTINATION


    use type_chidg,     only: chidg_t
    use type_meshdata,  only: meshdata_t
    use type_point,     only: point_t
    use type_bc,        only: bc_t
    use mod_bc,         only: create_bc

    use mod_hdfio,      only: read_grid_hdf
    use mod_chimera
    implicit none


    type(chidg_t)                   :: chidg
    class(bc_t),        allocatable :: bc
    type(meshdata_t),   allocatable :: meshdata(:)
    type(point_t)                   :: coord
    character(len=100)              :: filename = 'D2_E8_M1_overlapping_matching.h5'
    real(rk)                        :: tol
    integer(ik)                     :: nterms_s, ndom, ChiID, ddomain, delement, ndonors, ngq
    integer(ik)                     :: idom, ielem, igq, idonor, iface, spacedim


    tol             = 1.e-13_rk
    spacedim        = 3
    nterms_s        = 8
    IO_DESTINATION  = 'file'


    !
    ! Initialize ChiDG environment
    !
    call chidg%init('env')



    !
    ! Read 2-Domain overlapping grid
    !
    call chidg%read_grid(filename,spacedim)
    call chidg%read_boundaryconditions(filename)



    call chidg%initialize_solution_domains(nterms_s)
    call chidg%init('communication')




    call detect_chimera_faces(chidg%data%mesh)
    call detect_chimera_donors(chidg%data%mesh)


    !
    ! Compute Chimera interpolators. THIS IS BEING TESTED
    !
    call compute_chimera_interpolators(chidg%data%mesh)











    !
    ! Close ChiDG interface
    !
    call chidg%close('core')



end subroutine



















