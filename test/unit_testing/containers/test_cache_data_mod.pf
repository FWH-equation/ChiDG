module test_cache_data_mod
    use pfunit_mod
    use mod_kinds,                  only: rk,ik
    use mod_test_utilities,         only: create_mesh_file
    use mod_file_utilities,         only: delete_file

    use type_chidg,                 only: chidg_t
    use type_cache_data,            only: cache_data_t
    implicit none

    public  :: test_cache_data


    !>
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !--------------------------------------------------------------------------
    @TestCase
    type, extends(TestCase) ::  test_cache_data

        character(:),   allocatable :: filename
        type(chidg_t)               :: chidg
        integer(ik)                 :: solution_order = 2

    contains
        procedure   ::  setUp
        procedure   ::  tearDown
    end type test_cache_data
    !***************************************************************************


contains

    !>  NOTE: make sure to use 'this' instead of 'self' since these are over-writting a 
    !!  derived type procedure. The argument names have to match
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !------------------------------------------------------------------------------------------
    subroutine setUp(this)
        class(test_cache_data),    intent(inout)   :: this
        
        call this%chidg%start_up('core')

        !
        ! Create file
        !
        this%filename = "D1E27M1.h5"
        call create_mesh_file("D1 NxNxN",this%filename,nelem_xi=3,nelem_eta=3,nelem_zeta=3)

        !
        ! Read grid + bcs
        !
        call this%chidg%read_grid(this%filename,3)
        call this%chidg%read_boundaryconditions(this%filename)

        ! Initialize
        call this%chidg%set('Solution Order', integer_input=this%solution_order)
        call this%chidg%init('domains')
        call this%chidg%init('communication')

    end subroutine setUp
    !************************************************************************************
    

    !>
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !-------------------------------------------------------------------------------------
    subroutine tearDown(this)
        class(test_cache_data),    intent(inout)   :: this

        !
        ! Close ChiDG interface
        !
        call this%chidg%shut_down('core')

        call delete_file(this%filename)

    end subroutine tearDown
    !**************************************************************************************





    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_face_interior__allocated(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem, iface
        type(cache_data_t)          :: cache_data

        idomain = 1
        ielem   = 14
        iface   = 1


        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('face interior',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem,iface)


        !
        ! Test that the cache allocated the correct component
        !
        @assertTrue(allocated(cache_data%fields))
        
    end subroutine test_resize_face_interior__allocated
    !***************************************************************************************





    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_face_interior__size(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem, iface
        type(cache_data_t)          :: cache_data

        idomain = 1
        ielem   = 14
        iface   = 1


        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('face interior',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem,iface)



        ! Number of Fields
        !   1 Primary Field + 3 Model Fields(cx,cy,cz) = 4
        !
        @assertEqual(size(cache_data%fields), 4)

        
    end subroutine test_resize_face_interior__size
    !***************************************************************************************








    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_face_exterior__allocated(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem, iface
        type(cache_data_t)          :: cache_data

        idomain = 1
        ielem   = 14
        iface   = 1


        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('face exterior',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem,iface)


        !
        ! Test that the cache allocated the correct component
        !
        @assertTrue(allocated(cache_data%fields))
        
    end subroutine test_resize_face_exterior__allocated
    !***************************************************************************************





    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_face_exterior__size(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem, iface
        type(cache_data_t)          :: cache_data

        idomain = 1
        ielem   = 14
        iface   = 1


        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('face exterior',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem,iface)



        ! Number of Fields
        !   1 Primary Field + 3 Model Fields(cx,cy,cz) = 4
        !
        @assertEqual(size(cache_data%fields), 4)
        
    end subroutine test_resize_face_exterior__size
    !***************************************************************************************















    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_element__allocated(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem
        type(cache_data_t)          :: cache_data

        idomain = 1
        ielem   = 14


        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('element',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem)


        !
        ! Test that the cache allocated the correct component
        !
        @assertTrue(allocated(cache_data%fields))
        
    end subroutine test_resize_element__allocated
    !***************************************************************************************





    !> Test element metric entries at quadrature points
    !!
    !!  @author Nathan A. Wukie (AFRL)
    !!  @date   9/7/2016
    !!
    !!-------------------------------------------------------------------------------------
    @Test
    subroutine test_resize_element__size(self)
        class(test_cache_data),    intent(inout)   :: self
        
        integer(ik)                 :: idomain, ielem
        type(cache_data_t)          :: cache_data

        
        idomain = 1
        ielem   = 14

        !
        ! Call resize routine. THIS IS BEING TESTED.
        !
        call cache_data%resize('element',self%chidg%data%mesh,self%chidg%data%eqnset(:)%prop,idomain,ielem)



        ! Number of Fields
        !   1 Primary Field + 3 Model Fields(cx,cy,cz) = 4
        !
        @assertEqual(size(cache_data%fields), 4)

        
    end subroutine test_resize_element__size
    !***************************************************************************************





















end module test_cache_data_mod
