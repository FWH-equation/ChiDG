@Test
subroutine test_chidgdata__add_domain__onedomain()
    use pfunit_mod
    use mod_kinds,                  only: ik, rk
    use mod_constants,              only: IO_DESTINATION
    use type_chidg,                 only: chidg_t
    use type_point,                 only: point_t
    use mod_test_utilities,         only: create_mesh
    use type_domain_connectivity,   only: domain_connectivity_t
    implicit none


    type(chidg_t)               :: chidg
    type(point_t),  allocatable :: nodes(:)
    type(domain_connectivity_t) :: connectivity
    integer(ik)                 :: nterms_c, nterms_s, spacedim
    

    IO_DESTINATION = 'file'

    !
    ! Initialize ChiDG environment
    !
    call chidg%start_up('core')


    !
    ! Generate mesh points
    !
    call create_mesh('333',nodes,connectivity)


    !
    ! Set expansion terms
    !
    nterms_c = 8
    nterms_s = 8
    spacedim = 3

    
    !
    ! call chidg%data%add_domain. THIS IS BEING TESTED
    !
    call chidg%data%add_domain('D_01',nodes,connectivity,spacedim,nterms_c,'Scalar Advection','Cartesian')



    ! test chidg%data%ndomains
    @assertEqual(1,chidg%data%ndomains())
    @assertEqual(1,size(chidg%data%mesh))
    @assertEqual(1,size(chidg%data%eqnset))


    !
    ! Close ChiDG interface
    !
    call chidg%shut_down('core')

end subroutine test_chidgdata__add_domain__onedomain
