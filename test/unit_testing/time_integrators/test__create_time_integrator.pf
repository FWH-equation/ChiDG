!> Test that solverdata_t was returned 'allocated'
@Test
subroutine test__create_time_integrator__allocated()
    use pfunit_mod
    use mod_kinds,              only: rk,ik
    use mod_time_integrators,   only: create_time_integrator
    use type_time_integrator,   only: time_integrator_t
    
    implicit none
    class(time_integrator_t),    allocatable :: time
    
    
    ! PROCEDURE BEING TESTED
    call create_time_integrator('steady',time)
    
    
    ! Test allocated
    @assertTrue(allocated(time))
    
end subroutine test__create_time_integrator__allocated






!> Test that allocated type is returned with expected type
@Test
subroutine test__create_time_integrator__type()
    use pfunit_mod
    use mod_kinds,              only: rk,ik
    use mod_time_integrators,   only: create_time_integrator
    use type_time_integrator,   only: time_integrator_t
    use type_steady,            only: steady_t
    
    implicit none
    class(time_integrator_t),     allocatable :: time
    
    
        
    ! PROCEDURE BEING TESTED
    call create_time_integrator('steady',time)
    
    
    ! Test for correct type
    select type(time)
        type is (steady_t)
            ! correct type
            @assertTrue(.true.) 
        
        class default
            ! correct type was not detected, ERROR
            @assertTrue(.false.) 
    end select
            
    
end subroutine test__create_time_integrator__type

